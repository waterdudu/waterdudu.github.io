<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on waterdudu&#39;s blog</title>
    <link>http://waterdudu.github.io/tags/golang/</link>
    <description>Recent content in Golang on waterdudu&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Mar 2016 10:59:34 +0800</lastBuildDate>
    <atom:link href="http://waterdudu.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>golang handler middleware</title>
      <link>http://waterdudu.github.io/post/golang-handler-middleware/</link>
      <pubDate>Wed, 16 Mar 2016 10:59:34 +0800</pubDate>
      
      <guid>http://waterdudu.github.io/post/golang-handler-middleware/</guid>
      <description>

&lt;p&gt;我们知道 handler 可以这么写：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func messageHandler(message string) http.Handler {
  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
    w.Write([]byte(message)
  })
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们可以通过传递一个 next handler 代替 message 来创建一个 handler 链，来实现 middleware 的功能。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func exampleMiddleware(next http.Handler) http.Handler {
  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
    // Our middleware logic goes here...
    next.ServeHTTP(w, r)
  })
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;middleware 有这样的签名&lt;code&gt;func(http.Handler) http.Handler&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;因为它返回 http.Handler，所以可以直接用在 &lt;code&gt;http.Handle&lt;/code&gt;函数里。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http.Handle(&amp;quot;/&amp;quot;, middlewareOne(middlewareTwo(finalHandler)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;reference:fab441a025c46c0b3584c6d73f0554e4&#34;&gt;reference&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.alexedwards.net/blog/making-and-using-middleware&#34;&gt;http://www.alexedwards.net/blog/making-and-using-middleware&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>golang handler</title>
      <link>http://waterdudu.github.io/post/golang-handler/</link>
      <pubDate>Wed, 16 Mar 2016 10:33:28 +0800</pubDate>
      
      <guid>http://waterdudu.github.io/post/golang-handler/</guid>
      <description>

&lt;p&gt;自定义 Handler 是实现 ServeHTTP 方法的 struct，可以在自定义的 handler 里存储不同业务需要的变量，在处理请求(ServeHTTP)时使用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type timeHandler struct {
  format string
}

func (th *timeHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {
  tm := time.Now().Format(th.format)
  w.Write([]byte(&amp;quot;The time is: &amp;quot; + tm))
}

func main() {
  mux := http.NewServeMux()

  th := &amp;amp;timeHandler{format: time.RFC1123}
  mux.Handle(&amp;quot;/time&amp;quot;, th)

  log.Println(&amp;quot;Listening...&amp;quot;)
  http.ListenAndServe(&amp;quot;:3000&amp;quot;, mux)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;定义 custom struct 有时很繁琐，为了简化，我们可以用 func 来作为 handler。&lt;/p&gt;

&lt;p&gt;带有&lt;code&gt;func(http.ResponseWriter, *http.Request)&lt;/code&gt;签名的函数可以被转换成 handler（通过&lt;code&gt;http.HandlerFunc&lt;/code&gt;）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func timeHandler(w http.ResponseWriter, r *http.Request) {
  tm := time.Now().Format(time.RFC1123)
  w.Write([]byte(&amp;quot;The time is: &amp;quot; + tm))
}

func main() {
  mux := http.NewServeMux()

  // Convert the timeHandler function to a HandlerFunc type
  th := http.HandlerFunc(timeHandler)
  // And add it to the ServeMux
  mux.Handle(&amp;quot;/time&amp;quot;, th)

  log.Println(&amp;quot;Listening...&amp;quot;)
  http.ListenAndServe(&amp;quot;:3000&amp;quot;, mux)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go 的 ServMux 提供了将函数转换成 handler 的方法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func main() {
  mux := http.NewServeMux()

  mux.HandleFunc(&amp;quot;/time&amp;quot;, timeHandler)

  log.Println(&amp;quot;Listening...&amp;quot;)
  http.ListenAndServe(&amp;quot;:3000&amp;quot;, mux)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是这样声明的函数是 hardcode 的，所以可以定一个返回函数的函数，传递变量实现参数化的 handler。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func timeHandler(format string) http.Handler {
  fn := func(w http.ResponseWriter, r *http.Request) {
    tm := time.Now().Format(format)
    w.Write([]byte(&amp;quot;The time is: &amp;quot; + tm))
  }
  return http.HandlerFunc(fn)
}

func main() {
  mux := http.NewServeMux()

  th := timeHandler(time.RFC1123)
  mux.Handle(&amp;quot;/time&amp;quot;, th)

  log.Println(&amp;quot;Listening...&amp;quot;)
  http.ListenAndServe(&amp;quot;:3000&amp;quot;, mux)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面的声明方式更简洁：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func timeHandler(format string) http.Handler {
  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
    tm := time.Now().Format(format)
    w.Write([]byte(&amp;quot;The time is: &amp;quot; + tm))
  })
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;reference:55684022fdd85621983eb92a8e0cab7b&#34;&gt;reference&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.alexedwards.net/blog/a-recap-of-request-handling&#34;&gt;http://www.alexedwards.net/blog/a-recap-of-request-handling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>data science</title>
      <link>http://waterdudu.github.io/post/data-science/</link>
      <pubDate>Fri, 26 Feb 2016 21:06:42 +0800</pubDate>
      
      <guid>http://waterdudu.github.io/post/data-science/</guid>
      <description>

&lt;h1 id=&#34;level-one-basic-analysis:3cba299fa99ed66a6836f50e1204add3&#34;&gt;Level One: Basic analysis&lt;/h1&gt;

&lt;h1 id=&#34;level-two-predictive-analysis:3cba299fa99ed66a6836f50e1204add3&#34;&gt;Level Two: Predictive analysis&lt;/h1&gt;

&lt;h1 id=&#34;level-three:3cba299fa99ed66a6836f50e1204add3&#34;&gt;Level Three:&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>oidc</title>
      <link>http://waterdudu.github.io/post/oidc/</link>
      <pubDate>Tue, 23 Feb 2016 13:46:31 +0800</pubDate>
      
      <guid>http://waterdudu.github.io/post/oidc/</guid>
      <description>

&lt;h1 id=&#34;oidc:2b30c4fc5c437b1e9b1339858d548888&#34;&gt;OIDC&lt;/h1&gt;

&lt;h3 id=&#34;oidc-client:2b30c4fc5c437b1e9b1339858d548888&#34;&gt;oidc.Client&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;httpClient: to send http request&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;type Client struct {
	httpClient     phttp.Client
	providerConfig *providerConfigRepo
	credentials    ClientCredentials
	redirectURL    string
	scope          []string
	keySet         key.PublicKeySet
	providerSyncer *ProviderConfigSyncer

	keySetSyncMutex sync.RWMutex
	lastKeySetSync  time.Time
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;clientconfig:2b30c4fc5c437b1e9b1339858d548888&#34;&gt;ClientConfig&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;type ClientConfig struct {
	HTTPClient     phttp.Client
	Credentials    ClientCredentials
	Scope          []string
	RedirectURL    string
	ProviderConfig ProviderConfig
	KeySet         key.PublicKeySet
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ProviderConfig with lock&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type providerConfigRepo struct {
	mu     sync.RWMutex
	config ProviderConfig // do not access directly, use Get()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;providerconfig:2b30c4fc5c437b1e9b1339858d548888&#34;&gt;ProviderConfig&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;// ProviderConfig represents the OpenID Provider Metadata specifying what
// configurations a provider supports.
//
// See: http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata
type ProviderConfig struct {
	Issuer               *url.URL // Required
	AuthEndpoint         *url.URL // Required
	TokenEndpoint        *url.URL // Required if grant types other than &amp;quot;implicit&amp;quot; are supported
	UserInfoEndpoint     *url.URL
	KeysEndpoint         *url.URL // Required
	RegistrationEndpoint *url.URL

	// Servers MAY choose not to advertise some supported scope values even when this
	// parameter is used, although those defined in OpenID Core SHOULD be listed, if supported.
	ScopesSupported []string
	// OAuth2.0 response types supported.
	ResponseTypesSupported []string // Required
	// OAuth2.0 response modes supported.
	//
	// If omitted, defaults to DefaultResponseModesSupported.
	ResponseModesSupported []string
	// OAuth2.0 grant types supported.
	//
	// If omitted, defaults to DefaultGrantTypesSupported.
	GrantTypesSupported []string
	ACRValuesSupported  []string
	// SubjectTypesSupported specifies strategies for providing values for the sub claim.
	SubjectTypesSupported []string // Required

	// JWA signing and encryption algorith values supported for ID tokens.
	IDTokenSigningAlgValues    []string // Required
	IDTokenEncryptionAlgValues []string
	IDTokenEncryptionEncValues []string

	// JWA signing and encryption algorith values supported for user info responses.
	UserInfoSigningAlgValues    []string
	UserInfoEncryptionAlgValues []string
	UserInfoEncryptionEncValues []string

	// JWA signing and encryption algorith values supported for request objects.
	ReqObjSigningAlgValues    []string
	ReqObjEncryptionAlgValues []string
	ReqObjEncryptionEncValues []string

	TokenEndpointAuthMethodsSupported          []string
	TokenEndpointAuthSigningAlgValuesSupported []string
	DisplayValuesSupported                     []string
	ClaimTypesSupported                        []string
	ClaimsSupported                            []string
	ServiceDocs                                *url.URL
	ClaimsLocalsSupported                      []string
	UILocalsSupported                          []string
	ClaimsParameterSupported                   bool
	RequestParameterSupported                  bool
	RequestURIParamaterSupported               bool
	RequireRequestURIRegistration              bool

	Policy         *url.URL
	TermsOfService *url.URL

	// Not part of the OpenID Provider Metadata
	ExpiresAt time.Time
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;oauth2:2b30c4fc5c437b1e9b1339858d548888&#34;&gt;OAuth2&lt;/h1&gt;

&lt;h3 id=&#34;oauth2-client:2b30c4fc5c437b1e9b1339858d548888&#34;&gt;oauth2.Client&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;type Client struct {
	hc          phttp.Client
	creds       ClientCredentials
	scope       []string
	authURL     *url.URL
	redirectURL *url.URL
	tokenURL    *url.URL
	authMethod  string
}

type ClientCredentials struct {
	ID     string
	Secret string
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TokenResponse&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type TokenResponse struct {
	AccessToken  string
	TokenType    string
	Expires      int
	IDToken      string
	RefreshToken string // OPTIONAL.
	Scope        string // OPTIONAL, if identical to the scope requested by the client, otherwise, REQUIRED.
	RawBody      []byte // In case callers need some other non-standard info from the token response
}

type AuthCodeRequest struct {
	ResponseType string
	ClientID     string
	RedirectURL  *url.URL
	Scope        []string
	State        string
}


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>scapy</title>
      <link>http://waterdudu.github.io/post/scrapy/</link>
      <pubDate>Tue, 23 Feb 2016 11:58:07 +0800</pubDate>
      
      <guid>http://waterdudu.github.io/post/scrapy/</guid>
      <description>

&lt;p&gt;refs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://doc.scrapy.org/en/latest/intro/tutorial.html&#34;&gt;scrapy tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/scrapy/scrapy/wiki&#34;&gt;scrapy wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.pluskid.org/?p=366&#34;&gt;pluskid tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mherman.org/blog/2012/11/05/scraping-web-pages-with-scrapy/#.VsvWUpN96gw&#34;&gt;scrapying web page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://realpython.com/blog/python/web-scraping-with-scrapy-and-mongodb/&#34;&gt;scrapy &amp;amp; mongodb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-scrapy:ae320e7ea6afb117d04e71c0e04b8bc3&#34;&gt;install scrapy&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;pip install scrapy
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-a-project:ae320e7ea6afb117d04e71c0e04b8bc3&#34;&gt;create a project&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;scrapy 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>postgres</title>
      <link>http://waterdudu.github.io/post/postgres/</link>
      <pubDate>Fri, 19 Feb 2016 15:07:01 +0800</pubDate>
      
      <guid>http://waterdudu.github.io/post/postgres/</guid>
      <description>&lt;p&gt;login&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;psql dex_db
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;check available database &lt;code&gt;\l&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dex_db=# \l
                              List of databases
   Name    | Owner | Encoding |   Collate   |    Ctype    | Access privileges
-----------+-------+----------+-------------+-------------+-------------------
 d2        | dudu  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/dudu         +
           |       |          |             |             | dudu=CTc/dudu    +
           |       |          |             |             | dex=CTc/dudu
 dex_db    | dudu  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/dudu         +
           |       |          |             |             | dudu=CTc/dudu    +
           |       |          |             |             | dex=CTc/dudu
 dexdb1    | dudu  | UTF8     | en_US.UTF-8 | en_US.UTF-8 |
 postgres  | dudu  | UTF8     | en_US.UTF-8 | en_US.UTF-8 |
 template0 | dudu  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/dudu          +
           |       |          |             |             | dudu=CTc/dudu
 template1 | dudu  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/dudu          +
           |       |          |             |             | dudu=CTc/dudu
(6 rows)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;select db&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\l dex_db&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dex_db=# \l dex_db
                             List of databases
  Name  | Owner | Encoding |   Collate   |    Ctype    | Access privileges
--------+-------+----------+-------------+-------------+-------------------
 dex_db | dudu  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/dudu         +
        |       |          |             |             | dudu=CTc/dudu    +
        |       |          |             |             | dex=CTc/dudu
(1 row)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;list tables
&lt;code&gt;\d&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dex_db=# \d
                  List of relations
 Schema |          Name           |   Type   | Owner
--------+-------------------------+----------+-------
 public | authd_user              | table    | dex
 public | client_identity         | table    | dex
 public | connector_config        | table    | dex
 public | dex_migrations          | table    | dex
 public | key                     | table    | dex
 public | password_info           | table    | dex
 public | refresh_token           | table    | dex
 public | refresh_token_id_seq    | sequence | dex
 public | remote_identity_mapping | table    | dex
 public | session                 | table    | dex
 public | session_key             | table    | dex
(11 rows)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;use &lt;code&gt;encode&lt;/code&gt; to show bytea type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dex_db=# select id,encode(secret,&#39;escape&#39;) from client_identity;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;-[ RECORD 1 ]--------------------------------------------------------
id     | qWXRp93pWJ6mKzoYPlOEL9kgD8_QYQhCODaSEMbb2EE=@127.0.0.1
encode | $2a$10$a.NImDoBxch/GPO2XL/tH.Hc0wZEehZQXXPZstSb0ZNa8UDYWaK4u
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;describe table&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dex_db=# \d session
       Table &amp;quot;public.session&amp;quot;
    Column    |  Type   | Modifiers
--------------+---------+-----------
 id           | text    | not null
 state        | text    |
 created_at   | bigint  |
 expires_at   | bigint  |
 client_id    | text    |
 client_state | text    |
 redirect_url | text    |
 identity     | text    |
 connector_id | text    |
 user_id      | text    |
 register     | boolean |
 nonce        | text    |
 scope        | text    |
Indexes:
    &amp;quot;session_pkey&amp;quot; PRIMARY KEY, btree (id)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;select table &lt;code&gt;\x on&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dex_db=# \x on
Expanded display is on.
dex_db=# select * from session;
-[ RECORD 1 ]+----------------------------------------------------------------------------------------------------------
id           | YqEuCHscVgs=
state        | REMOTE_ATTACHED
created_at   | 1455864780
expires_at   | 1455907980
client_id    | qWXRp93pWJ6mKzoYPlOEL9kgD8_QYQhCODaSEMbb2EE=@127.0.0.1
client_state |
redirect_url | http://127.0.0.1:5555/callback
identity     | {&amp;quot;ID&amp;quot;:&amp;quot;115162047548008935474&amp;quot;,&amp;quot;Name&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;Email&amp;quot;:&amp;quot;iamwhoami@gmail.com&amp;quot;,&amp;quot;ExpiresAt&amp;quot;:&amp;quot;2016-02-19T07:53:41Z&amp;quot;}
connector_id | google
user_id      |
register     | f
nonce        |
scope        | openid email profile
-[ RECORD 2 ]+----------------------------------------------------------------------------------------------------------
id           | 2prwA7hETTk=
state        | EXCHANGED
created_at   | 1455864909
expires_at   | 1455908109
client_id    | qWXRp93pWJ6mKzoYPlOEL9kgD8_QYQhCODaSEMbb2EE=@127.0.0.1
client_state |
redirect_url | http://127.0.0.1:5555/callback
identity     | {&amp;quot;ID&amp;quot;:&amp;quot;115162047548008935474&amp;quot;,&amp;quot;Name&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;Email&amp;quot;:&amp;quot;iamwhoami@gmail.com&amp;quot;,&amp;quot;ExpiresAt&amp;quot;:&amp;quot;2016-02-19T07:55:26Z&amp;quot;}
connector_id | google
user_id      | 0ee2468c-5e74-426f-ba01-c555d7630a38
register     | t
nonce        |
scope        | openid email profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;drop db&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DROP DATABASE mydb;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;drop table&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DROP TABLE mytable;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>